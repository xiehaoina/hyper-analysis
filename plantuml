@startuml
Title "Tracker类图"

Model ..> DataFrame
Model <|-- NativeModel
Model <|-- ServiceModel
ServiceModel <|-- MetroCrossDetectionModel

abstract class Model {
+ public DataFrame call(DataFrame df)
+ public Property getProperty(void)
+ public setProperty(Property property)
}

abstract class NativeModel

abstract class ServiceModel {

}

class MetroCrossDetectionModel{
+ public setDetectRegion(List<Position>)  
}



DataFrame <|-- ImageDataFrame
DataFrame <|-- TableDataFrame
DataFrame <|-- KVDataFrame

abstract class DataFrame{
+ public DataFrame merge(DataFrame df)
+ public void export(Path path)
}

class ImageDataFrame{
+ public ImageDataFrame merge(KVDataFrame df)
+ public ImageDataFrame merge(ImageDataFrame df)
}
class TableDataFrame
class KVDataFrame



Tracker --> Model
Tracker *-- DataFrame 
Tracker <|-- TSFileTracker
Tracker <|-- ConstFileTracker
Tracker <|-- VideoFileTracker
Tracker <|-- OperatorTracker
OperatorTracker <|-- MergeOptTracker
OperatorTracker <|-- LookupOptTracker
OperatorTracker<|-- CaptureOptTracker

abstract class Tracker{
+ public applyModel(Model model)
+ public DataFrame getDataFrame(Time time)
+ public Time getBeginTime(void)
+ public Time getEndTime(void)
+ public Time getTimeSlot(void)
+ public Time setTimeSlot(void)
+ public Time getTimeLength(void)
+ public Property getProperty(void)
+ public setProperty(Property property)
}

class TSFileTracker{
+ public TSFileTracker(File file, FileType fileType = "CSV", TSColumn column )
}

class ConstFileTracker{
+ public ConstFileTracker(File file, FileType fileType = "CSV")
}

class VideoFileTracker{
+ public ConstFileTracker(File file, )
+ public ConstFileTracker(List<File> files)
}

class MergeOptTracker{
+ public MergeOptTracker(Track track1 , Track track2)
}

class LookupOptTracker{
+ public LookupOptTracker(Track mainTrack, Track constTrack)
}

class CaptureOptTracker{
+ public CaptureOptTracker(Track track)

}


class TaskEngine{
+ public export(Path path, List<Track> tracks)
+ public addTrack(Track track)
+ public deleteTrack(Track track)
}

class Resource{
+public Path getPath()
+public Type getType()
}


Pannel<|-- TextPannel
Pannel<|-- VideoPannel
Pannel<|-- PolyPannel
Pannel<|-- TablePannel

abstract class Pannel{
+public Pannel(Track track)
}
class TextPannel
class VideoPannel
class PolyPannel
class TablePannel

Job *-- TaskEngine

class Job{
+public addResource(Resource resource)
+public deleteResource(Resource resource)
+public addPannel(Pannel pannel)
+public deletePannel(Pannel pannel)
+public addTrack(Tracker tracker)
+public deleteTrack(Tracker tracker)
+public addOperator(OperatorTracker OptTracker )
+public deleteOperator(OperatorTracker OptTracker)
}
@enduml
