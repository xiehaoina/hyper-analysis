@startuml
Title "Tracker类图"

Model ..> DataFrame
Model <|-- NativeModel
Model <|-- ServiceModel
ServiceModel <|-- MetroCrossDetectionModel

abstract class Model {
+ public DataFrame call(DataFrame df)
}

abstract class NativeModel

abstract class ServiceModel {

}

class MetroCrossDetectionModel{
+ public setDetectRegion(List<Position>)  
}



DataFrame <|-- ImageDataFrame
DataFrame <|-- TableDataFrame
DataFrame <|-- KVDataFrame

abstract class DataFrame{
+ public DataFrame merge(DataFrame df)
+ public void export(Path path)
}

class ImageDataFrame{
+ public ImageDataFrame merge(KVDataFrame df)
+ public ImageDataFrame merge(ImageDataFrame df)
}
class TableDataFrame
class KVDataFrame



Tracker --> Model
Tracker *-- DataFrame 
Tracker <|-- TSFileTracker
Tracker <|-- ConstFileTracker
Tracker <|-- VideoFileTracker
Tracker <|-- MergeOptTracker
Tracker <|-- LookupOptTracker
Tracker <|-- CaptureTracker

abstract class Tracker{
+ public applyModel(Model model)
+ public DataFrame getDataFrame(Time time)
+ public Time getBeginTime(void)
+ public Time getEndTime(void)
+ public Time getTimeSlot(void)
+ public Time setTimeSlot(void)
+ public Time getTimeLength(void)
+ public Property getProperty(void)
+ public setProperty(Property property)
}

class TSFileTracker{
+ public TSFileTracker(File file, TSColumn column , FileType fileType = "CSV")
}

class ConstFileTracker{
+ public ConstFileTracker(File file, FileType fileType = "CSV")
}

class VideoFileTracker{
+ public ConstFileTracker(File file, FileType fileType = "mkv")
+ public ConstFileTracker(List<File> files, FileType fileType = "mkv")
}

class MergeOptTracker{
+ public MergeOptTracker(Track track1 , Track track2)
}

class LookupOptTracker{
+ public LookupOptTracker(Track mainTrack, Track constTrack)
}

class CaptureTracker{
+ public CaptureTracker(Track track)

}
@enduml
